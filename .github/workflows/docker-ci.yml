name: Docker CI/CD

on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Unit Tests
        working-directory: ./src 
        run: |
          echo "Lancer les tests unitaires"
          # Remplacez cette commande par vos scripts ou outils de test, par exemple :
          # ./bin/test ou phpunit, si applicable

  build-and-push:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Tag Docker Image
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          docker build -t ${{ secrets.DOCKER_USERNAME }}/php-app:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/php-app:latest ${{ secrets.DOCKER_USERNAME }}/php-app:${TIMESTAMP}
          echo "IMAGE_TAG=${TIMESTAMP}" >> $GITHUB_ENV

      - name: Push Docker Images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/php-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/php-app:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy Application
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Server
        run: |
          ssh -i ~/.ssh/id_rsa user@your-server "docker pull ${{ secrets.DOCKER_USERNAME }}/php-app:latest && docker-compose up -d"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
